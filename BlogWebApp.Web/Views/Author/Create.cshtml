@model BlogWebApp.ViewModel.AuthorViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@helper CheckBoxList(IEnumerable<string> items)
    {
        foreach (var item in items)
        {
            <input type="checkbox" value="@item">
            <span class="custom-control-description">@item</span>
            <br />
        }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h3 class="page-title">Questionare</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, new { @class = "col-form-label" })
        <div>
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, new { @class = "col-form-label" })
        <div>
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NickName, new { @class = "col-form-label" })
        <div>
            @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
            <p class="text-danger">@ViewBag.error</p>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Age, new { @class = "col-form-label" })
        <div>
            <input type="number" name="Age" min="1" max="88" class="form-control" />
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.Gender, new { @class = "col-form-label" })
        <div>
            <div>
                @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control custom-control-input" } })
                <span class="custom-control-description">Male</span><br />
                @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control custom-control-input" } })
                <span class="custom-control-description">Female</span><br />
                @Html.RadioButtonFor(model => model.Gender, "Secret", new { htmlAttributes = new { @class = "form-control custom-control-input" } })
                <span class="custom-control-description">It`s my secret</span><br />
            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.Country, new { @class = "col-form-label" })
        <div>
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Country, "")
        </div>
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.FavouriteColor, new { @class = "col-form-label" })
        <div>
            <div>
                @Html.RadioButtonFor(model => model.FavouriteColor, "Red", new { htmlAttributes = new { @class = "form-control custom-control-input" } })
                <span class="custom-control-description">Red</span><br />
                @Html.RadioButtonFor(model => model.FavouriteColor, "Green", new { htmlAttributes = new { @class = "form-control custom-control-input" } })
                <span class="custom-control-description">Green</span><br />
                @Html.RadioButtonFor(model => model.FavouriteColor, "Blue", new { htmlAttributes = new { @class = "form-control custom-control-input" } })
                <span class="custom-control-description">Blue</span><br />
                @Html.RadioButtonFor(model => model.FavouriteColor, "Other", new { htmlAttributes = new { @class = "form-control custom-control-input" } })
                <span class="custom-control-description">Other</span><br />
            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.HavePets, new { @class = "col-form-label" })
        <div>
            <div>
                @Html.RadioButtonFor(model => model.HavePets, true, new { htmlAttributes = new { @class = "form-control" } })
                <span>Yes</span><br />
                @Html.RadioButtonFor(model => model.HavePets, false, new { htmlAttributes = new { @class = "form-control" } })
                <span>No</span><br />
                @Html.ValidationMessageFor(model => model.HavePets, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.RideABike, new { @class = "col-form-label" })
        <div>
            <div>
                @Html.EditorFor(model => model.RideABike, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RideABike, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        <label class="col-form-label">Your interests</label><br />
        @CheckBoxList(ViewBag.hobbies)
    </div>
    <br />
    <div class="form-group">
        <div>
            <input type="submit" value="Create" class="btn btn-success" />
            <input type="reset" value="Clear" class="btn btn-secondary" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary", type = "button" })
        </div>
        <br />
    </div>
}

@Scripts.Render("~/bundles/jqueryval")